version: "3.8"

volumes:
  redis_data:
  pgdata:


services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file: ./env_files/postgres.env

  core:
    build: backend
    container_name: core
    hostname: core
    network_mode: "host"
    ports:
       - 8002:8002
    depends_on:
      - "postgres"
      - "mailing"
      - "redis"
    env_file:
      - ./env_files/postgres.env
      - ./env_files/global.env
      - ./env_files/redis.env
      - ./env_files/mailing.env
    volumes:
      - ./backend:/app/backend/

  mailing:
    build: mailing
    container_name: mailing
    hostname: mailing
    env_file:
      - ./env_files/mailing.env
    network_mode: "host"
    ports:
      - 8001:8001


  redis:
    image: "redis:alpine"
    restart: always
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    command:
      - 'redis-server'
      - '--requirepass foobared'
      - '--loglevel ${REDIS_LOGLEVEL:-warning}'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--maxmemory ${REDIS_MAXMEM:-50mb}'
      - '--maxmemory-policy ${REDIS_POLICY:-noeviction}'
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    network_mode: "host"
    ports:
      - "80:80"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf:ro
